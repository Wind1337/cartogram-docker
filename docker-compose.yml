version: '3'
services:
  web:
    image: python:3-stretch
    depends_on:
      - redis
      - postgres
    command: sh -c "pip install -r requirements.txt && python -c \"import web; web.db.create_all()\" && python web.py"
    environment:
      - CARTOGRAM_DEBUG=TRUE
      - CARTOGRAM_EXE=
      - CARTOGRAM_DATA_DIR=/root/web/data
      - CARTOGRAM_COLOR=#aaaaaa
      - CARTOGRAM_HOST=0.0.0.0
      - CARTOGRAM_PORT=5000
      - CARTOGRAM_VERSION=devel
      - CARTOGRAM_DATABASE_URI=postgresql://cartogram:cartogram@postgres/cartogram
      - CARTOGRAM_USE_DATABASE=TRUE
      - CARTOGRAM_SMTP_HOST=smtp.example.com
      - CARTOGRAM_SMTP_PORT=25
      - CARTOGRAM_SMTP_AUTHENTICATION_REQUIRED=TRUE
      - CARTOGRAM_SMTP_USER=user
      - CARTOGRAM_SMTP_PASSWORD=password
      - CARTOGRAM_SMTP_FROM_EMAIL=user@example.com
      - CARTOGRAM_SMTP_DESTINATION=destination@example.net
      - CARTOGRAM_GUNICORN_WORKERS=1
      - CARTOGRAM_GUNICORN_OPTIONS=
      - CARTOGRAM_LAMBDA_URL=http://serverless:5050/cartogram
      - CARTOGRAM_LAMBDA_API_KEY=
      - CARTOGRAM_PROGRESS_SECRET=
      - CARTOGRAM_REDIS_HOST=redis
      - CARTOGRAM_REDIS_PORT=6379
      - CARTOGRAM_GA_TRACKING_ID=
      - CARTOGRAM_LOCAL_DOCKERIZED=TRUE
    ports:
      - '5000:5000'
    working_dir: /root/web/internal
    volumes:
      - ./cartogram-web:/root/web:cached
  serverless:
    image: python:3-stretch
    command: sh -c "pip install -r requirements.txt && python simulate_lambda.py"
    environment:
      - LAMBDA_FUNCTION_NAME=cartogram
      - CARTOGRAM_PROGRESS_URL=http://web:5000/setprogress
      - CARTOGRAM_PROGRESS_SECRET=
      - LAMBDA_TASK_ROOT=/root/serverless/lambda_package
      - LAMBDA_SIMULATOR_HOST=0.0.0.0
      - LAMBDA_SIMULATOR_PORT=5050
    ports:
      - '5050:5050'
    working_dir: /root/serverless
    volumes:
      - ./cartogram-serverless:/root/serverless:cached
  redis:
    image: redis
  postgres:
    image: postgres:12
    environment:
      - POSTGRES_PASSWORD=cartogram
      - POSTGRES_USER=cartogram